% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coxstuff.R
\docType{class}
\name{CoxMaster}
\alias{CoxMaster}
\title{Create a master object to control worker objects generated by \code{\link[=CoxWorker]{CoxWorker()}}}
\format{An \code{\link[R6:R6Class]{R6::R6Class()}} generator object}
\description{
\code{CoxMaster} objects instantiate and run a distributed Cox model
computation fit
}
\section{Methods}{


\describe{
\item{\code{CoxMaster$new(defn, data, debug=FALSE)}}{Create a new
CoxMaster object using the defn and data. The debug flag is useful for
debugging}
\item{\code{logLik(beta, ...)}}{Compute the partial log likelihood for all the data
by aggregating the values at each site. The return value is numeric scalar with
two attributes: \code{gradient} contains the score vector, and \code{hessian}
contains the estimated hessian matrix}
\item{\code{addSite(name, url = NULL, worker = NULL)}}{Add a worker
site for participating in the distributed computation. Exactly one of \code{url} or \code{worker} should be specified}
\item{\code{var(beta, ...)}}{Compute the variance of the parameter vector beta}
\item{\code{kosher()}}{Check if inputs and state of object are sane. For future use}
\item{\code{getP()}}{Returns the dimension of the parameter vector}
\item{\code{run(control)}}{Run the fitting iterations and save the result using control object}
\item{\code{summary()}}{Return a summary data frame columns for \code{coef}, \code{exp(coef)},
standard error, z-score, and p-value for each parameter in the model following
the same format as the \code{survival} package}
}
}

\seealso{
\code{CoxWorker} which generates objects matched to such a master object
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CoxMaster$new()}}
\item \href{#method-kosher}{\code{CoxMaster$kosher()}}
\item \href{#method-logLik}{\code{CoxMaster$logLik()}}
\item \href{#method-addSite}{\code{CoxMaster$addSite()}}
\item \href{#method-run}{\code{CoxMaster$run()}}
\item \href{#method-summary}{\code{CoxMaster$summary()}}
\item \href{#method-clone}{\code{CoxMaster$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$new(defn, debug = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-kosher"></a>}}
\subsection{Method \code{kosher()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$kosher()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-logLik"></a>}}
\subsection{Method \code{logLik()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$logLik(beta)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addSite"></a>}}
\subsection{Method \code{addSite()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$addSite(name, url = NULL, worker = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\subsection{Method \code{run()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$run(control = coxph.control())}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\subsection{Method \code{summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoxMaster$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
